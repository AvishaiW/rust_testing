language: rust
cache: cargo
dist: trusty
os:
  - linux
# Run builds for all the supported trains
rust:
  - nightly
  - beta
  - stable
  - 1.0.0
matrix:
  allow_failures:
    - rust: nightly

# Add clippy
before_script:
  - |
    if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
      ( ( cargo install clippy && export CLIPPY=true ) || export CLIPPY=false );
    fi
  - export PATH=$PATH:~/.cargo/bin
# The main build
script:
  - cd hello/
  - cargo build
  - cargo test
  - |
    if [[ "$TRAVIS_RUST_VERSION" == "nightly" && $CLIPPY ]]; then
      cargo clippy
    fi
sudo: true
before_install:
  - sudo apt-get update
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

# Upload docs
after_success:
  # Coverage report
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
      wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
      tar xzf master.tar.gz &&
      cd kcov-master &&
      mkdir build &&
      cd build &&
      sudo cmake .. &&
      sudo make &&
      sudo make install &&
      make install DESTDIR=../../kcov-build &&
      cd ../.. &&
      rm -rf kcov-master &&
      for file in target/debug/hello-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
    fi